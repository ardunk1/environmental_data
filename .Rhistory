plot(y ~x, type = "1")
plot(y ~x, type = "l")
n <- 1000
x <- seq(from = -6, to =6, length.out = n)
y <- dnorm(x, mean = 0, sd = 1)
plot(y ~x, type = "l")
plot(y ~x, type = "l", ylab = "Probability Density")
y_2 <- dnorm(x, mean = 0, sd = 1)
plot(y ~x, type = "l", ylab = "Probability Density")
points(y_2 ~x, type = "l", lty = 2)
plot(y ~x, type = "l", ylab = "Probability Density")
points(y_2 ~x, type = "l", lty = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~x, type = "l", lty = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~x, type = "l", lty = 2)
y_2 <- dnorm(x, mean = 2, sd = 1)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~x, type = "l", lty = 2)
y_2 <- dnorm(x, mean = 0, sd = 2)
plot(y ~ x, type = "l", ylab = "Probability Density")
points(y_2 ~x, type = "l", lty = 2)
y_3 <- dnorm(x, mean = -2, sd = 1)
points(y_3 ~x, type = "l", lty = 2)
plot(y_cdf_1 ~ x, type = "l", ylab = "cumulative density")
y_cdf_1 = pnorm(x, mean = 0, sd = 1)
plot(y_cdf_1 ~ x, type = "l", ylab = "cumulative density")
y_cdf_2 = pnorm(x, mean = 0, sd = 2)
points(y_cdf_2 ~ x, type = "l", lty = 2)
y_cdf_3 = pnorm(x, mean = -2, sd = 1)
points(y_cdf_3 ~x, type = "l", lty = 2)
points(y_cdf_3 ~x, type = "l", lty = 3)
dbinom(0, size = 6, prob = .66)
pbinom(4, 6, prob = 0.66, lower.tail = T)
pbinom(5, 6, prob = 2/3, lower.tail = F)
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
W <- 26!
W <- 26^3
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
W <- 26^3
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
W <- 26^3
W <- 26^3
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
################Library of Babel Activity###########3
cat(letters[sample(26, size = 3, replace = T)], sep = "")
w1 <- 26^4
##############In-Class Confidence Intervals #####
qnorm(c(0.025, 0.975))
alpha <- .1
qnorm(alpha/2, 0, 1)
##############In-Class Confidence Intervals #####
qnorm(c(0.025, 0.975))
alpha <- .1
qnorm(alpha/2, 0, 1)
qnorm(c(0.05, 0.95))
help(qt)
help(qt)
qt(p, 10)
qt(10)
qt(c(0.05, 0.95), 10)
qt(c(0.025, 0.975), 10)
##############In-Class Confidence Intervals #####
qnorm(c(0.025, 0.975))
qt(c(0.025, 0.975), 100)
qt(c(0.025, 0.975), 200)
qt(c(0.025, 0.975), 500)
qt(c(0.025, 0.975), 1000)
qt(c(0.025, 0.975), 1500)
qt(c(0.025, 0.975), 2000)
qt(c(0.025, 0.975), 5000)
##############In-Class Confidence Intervals #####
qnorm(c(0.025, 0.975))
qt(c(0.025, 0.975), 50)
qt(c(0.025, 0.975), 49)
std <- 3.14
m <- 10
ss <- 50
sse <- std/sqrt(50)
source("~/environmental_data/working_file.R", echo=TRUE)
t-val <- qt(c(0.025, 0.975), 49)
tval <- qt(c(0.025, 0.975), 49)
CIrad <- sse*tval
CI <- m + CIrad
CI
tval <- qt(c(0.025, 0.975), 49)
tval
std <- 3.14
m <- 10
ss <- 50
sse <- std/sqrt(50)
CIrad <- sse*tval
CI <- m + CIrad
CI
library(here)
hab.sta <- read.csv(here( "data", "hab.sta.csv"))
bird.sta <- read.csv(here("data", "bird.sta.csv"))
#############Likelihood Excercise#############33
#Use bird.sta and hab.sta data - loaded from top of notebook
dpois(x=2, lambda = 4.5)
dpois(x=6, lambda = 4.5)
dpois(x=2, lambda = 4.5) * dpois(x=x, lambda = 4.5)
dpois(x=2, lambda = 4.5) * dpois(x=6, lambda = 4.5)
wiwa_counts <- c(2,6)
dpois(x=wiwa_counts, lambda = 4.5)
prod(dpois(x=wiwa_counts, lambda = 4.5))
sum(log(dpois(x= wiwa_count, lambda = 4.5)))
sum(log(dpois(x= wiwa_counts, lambda = 4.5)))
sum(log(dpois(x= wiwa_counts, lambda = 4.2)))
summary(dat_all$WIWA)
#load bird data
dat_bird <- read.csv(here::here("data", "bird.sta.csv"))
dat_habitat <- read.csv(here::here("data", "hab.sta.csv"))
dat_all <- merge(dat_bird, dat_habitat)
summary(dat_all$WIWA)
#check out data graphcially
hist(dat_all$WIWA)
hist(dat_all$WIAWA, breaks = 7)
hist(dat_all$WIWA, breaks = 7)
hist(dat_all$WIWA, breaks = 0:7)
hist(dat_all$WIWA, breaks = 0:7)
hist(dat_all$WIWA, breaks = 7)
hist(dat_all$WIWA, breaks = 7)
hist(dat_all$WIWA, breaks = 0:7)
hist(dat_all$WIWA, breaks = 0:7 - 0.5)
par(mfrow = c(1,2))
dat = dat_all$WIWA
hist(dat, breaks = 0:(max(dat)+1) - 0.5, main = "Histogram of \nWilson's Warbler counts")
dat = dat_all$GRJA
hist(dat, breaks = 0:(max(dat) = 1) = 0.5, main = "Histogram of \nGray Jay counts")
par(mfrow = c(1,2))
dat = dat_all$WIWA
hist(dat, breaks = 0:(max(dat)+1) - 0.5, main = "Histogram of \nWilson's Warbler counts")
dat = dat_all$GRJA
hist(dat, breaks = 0:(max(dat) + 1) = 0.5, main = "Histogram of \nGray Jay counts")
par(mfrow = c(1,2))
dat = dat_all$WIWA
hist(dat, breaks = 0:(max(dat)+1) - 0.5, main = "Histogram of \nWilson's Warbler counts")
dat = dat_all$GRJA
hist(dat, breaks = 0:(max(dat) + 1) - 0.5, main = "Histogram of \nGray Jay counts")
sum(log(dpois(x = dat_all$WIWA, lambda = 1)))
#load bird data
dat_bird <- read.csv(here::here("data", "bird.sta.csv"))
dat_habitat <- read.csv(here::here("data", "hab.sta.csv"))
dat_all <- merge(dat_bird, dat_habitat)
#check out data numerically
summary(dat_all$WIWA)
#check out data graphcially
hist(dat_all$WIWA)
hist(dat_all$WIWA, breaks = 7)
hist(dat_all$WIWA, breaks = 0:7)
hist(dat_all$WIWA, breaks = 0:7 - 0.5)
par(mfrow = c(1,2))
dat = dat_all$WIWA
hist(dat, breaks = 0:(max(dat)+1) - 0.5, main = "Histogram of \nWilson's Warbler counts")
dat = dat_all$GRJA
hist(dat, breaks = 0:(max(dat) + 1) - 0.5, main = "Histogram of \nGray Jay counts")
sum(log(dpois(x = dat_all$WIWA, lambda = 1)))
#Q1:
dpois(x = wiwa_counts, lambda = 2)
dpois(x=2, lambda = 4.5)
dpois(x=6, lambda = 4.5)
dpois(x=2, lambda = 4.5) * dpois(x=6, lambda = 4.5)
wiwa_counts <- c(2,6)
dpois(x=wiwa_counts, lambda = 4.5) #calculate multiple likelihoods at 1 time
prod(dpois(x=wiwa_counts, lambda = 4.5)) #calculate the product to 2 likelihoods (chance of observing each of the values)
sum(log(dpois(x= wiwa_counts, lambda = 4.5)))
sum(log(dpois(x= wiwa_counts, lambda = 4.2)))
#Q1:
dpois(x = wiwa_counts, lambda = 2)
sum(log(dpois(x = wiwa_counts, lambda = 4.5)))
sum(log(dpois(x = wiwa_counts, lambda = 6)))
sum(log(dpois(x = wiwa_counts, lambda = 2)))
sum(log(dpois(x = wiwa_counts, lambda = 3.5)))
sum(log(dpois(x = wiwa_counts, lambda = 4)))
sum(log(dpois(x = wiwa_counts, lambda = 3.9)))
sum(log(dpois(x = wiwa_counts, lambda = 4.1)))
#Q3:
hist(dat_all$WIWR)
#Q3:
par(mfrow = c(1,1))
hist(dat_all$WIWR)
datWIWR <- dat_all$WIWR
hist(dat, breaks = 0:(max(dat)+1) - 0.5, main = "Histogram of \n Winter Wren Counts")
summary(datWIWR)
hist(datWIWR, breaks = 0:(max(datWIWR)+1) - 0.5, main = "Histogram of \n Winter Wren Counts")
#Q4:
sum(log(dpois(x = datWIWR, lamda = 1.5))
#Q4:
sum(log(dpois(x = datWIWR, lamda = 1.5))
#Q4:
sum(log(dpois(x = datWIWR, lamda = 1.5)))
#Q4:
sum(log(dpois(x = datWIWR, lamda = 1)))
#Q4:
dpois(x = datWIWR, lamda = 1)
#Q4:
sum(log(dpois(x = dat_all$WIWR, lambda = 1)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1000)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 100)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 10)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 5)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = .1)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = .5)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 2)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 3)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 2.5)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1.5)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1.3)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1.4)))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1.6)))
help(bnom)
help(dbinom)
dbinom(4, size = (max(datWIWR),prob = .5))
dbinom(4, size = (max(datWIWR)), prob = .5))
dbinom(4, size = max(datWIWR), prob = .5)
dbinom(size = max(datWIWR), prob = .5)
dbinom(4, size = max(datWIWR), prob = .5)
log(dbinom(4, size = max(datWIWR), prob= .5)
log(dbinom(4, size = max(datWIWR), prob= .5)
log(dbinom(4, size = max(datWIWR), prob= .5))
log(dbinom(4, size = count(datWIWR), prob= .5))
log(dbinom(4, 1046, prob= .5))
dbinom(4, size = max(datWIWR), prob = .5)
dbinom(4, size = max(datWIWR), prob = 1.5)
dbinom(4, size = max(datWIWR), prob = 2)
log(dbinom(4, 1046, prob= .5))
log(dbinom(4, 1046, prob= 2))
binom(4, 1046, 2, log = TRUE)
dbinom(4, 1046, 2, log = TRUE)
dbinom(4, 1046, prob = 0.5, log = TRUE)
dbinom(8, 1046, prob = 0.5, log = TRUE)
dbinom(2, 1046, prob = 0.5, log = TRUE)
dbinom(2, 1046, prob = 1, log = TRUE)
dbinom(2, 1046, prob = 1, log = FALSE)
dbinom(datWIWR)
dbinom(datWIWR, size = 1046, prob = 2)
dbinom(datWIWR, size = 1046, prob = 0.5)
dbinom(datWIWR, size = 1046, prob = 0.5, log = TRUE)
sum(dbinom(datWIWR, size = 1046, prob = 0.5, log = TRUE))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1.6)))
help(dpois)
sum(dbinom(datWIWR, size = 1046, prob = 1, log = TRUE))
sum(dbinom(datWIWR, size = 1046, prob = 1.5, log = TRUE))
help(dbinom)
sum(dbinom(datWIWR, size = 1046, prob = .9, log = TRUE))
sum(dbinom(datWIWR, size = 1046, prob = .5, log = TRUE))
sum(dbinom(datWIWR, size = 1046, prob = .3, log = TRUE))
sum(dbinom(datWIWR, size = 1046, prob = 1/6, log = TRUE))
sum(dbinom(datWIWR, size = 1046, prob = 1/7, log = TRUE))
#Q4:
sum(log(dpois(x = datWIWR, lambda = 1.6)))
sum(dbinom(datWIWR, size = 1046, prob = 1/7, log = FALSE))
sum(dbinom(datWIWR, size = 1046, prob = .5, log = FALSE))
sum(dbinom(datWIWR, size = 1045, prob = 1/7, log = TRUE))
sum(dbinom(datWIWR, size = 1045, prob = 1/7, log = TRUE))
set.seed(1)
vec_rnorm = rnorm(n=10, mean - 0, sd = 1)
vec_rnorm = rnorm(n=10, mean = 0, sd = 1)
help(dnorm)
dnorm(vec_rnorm, mean = 0, sd = 1, log = TRUE)
sum(dnorm(vec_rnorm, mean = 0, sd = 1, log = TRUE))
set.seed(1)
set.seed <- 1 +vec_rnorm)
set.seed <- 1 +vec_rnorm
set.seed
set.seed(1)
vec_rnorm = rnorm(n=10, mean = 0, sd = 1)
sum(dnorm(vec_rnorm, mean = 0, sd = 1, log = TRUE))
set.seed(1)
vec_rnorm = rnorm(n=10, mean = 0, sd = 1)
dnorm(vec_rnorm, mean = 0, sd = 1, log = TRUE)
sum(dnorm(vec_rnorm, mean = 1, sd = 1, log = TRUE))
sum(dnorm(vec_rnorm, mean = .5, sd = 1, log = TRUE))
load(palmerpenguins)
#Q15:
require(palmerpenguins)
palmerpenguins
penguins
penguins <- penguins
sum(dnorm(penguins$flipper_length_mm, mean = 0, sd = 1))
penguins$flipper_length_mm
mean(penguins$flipper_length_mm)
mean(penguins$flipper_length_mm, rm.na)
mean(penguins$flipper_length_mm, na.rm)
help(na)
help("na.omit")
mean(penguins$flipper_length_mm, na.rm = TRUE)
sd(penguins$flipper_length_mm, na.rm = TRUE)
sum(dnorm(penguins$flipper_length_mm, mean = 0, sd = 1))
flipper_NoNA <- penguins$flipper_length_mm, na.rm = TRUE)
sum(dnorm(penguins$flipper_length_mm, mean = 201, sd = 14)
sum(dnorm(penguins$flipper_length_mm, mean = 201, sd = 14)
sum(dnorm(penguins$flipper_length_mm, mean = 201, sd = 14, log = TRUE))
flippers <- penguins$flipper_length_mm
flippers_No_NA <- c(flippers, na.rm = TRUE)
sum(dnorm(penguins$flipper_length_mm, mean = 201, sd = 14, na.rm = TRUE,log = TRUE))
help(dnorm)
flippers_No_NA <- c(flippers, na.omit = TRUE)
flippers_No_NA <- na.omit(flippers)
mean(flippers_No_NA)
sum(dnorm(flippers_No_NA, mean = 201, sd = 14, na.rm = TRUE,log = TRUE))
sum(dnorm(flippers_No_NA, mean = 201, sd = 14, log = TRUE))
flippers <- penguins$flipper_length_mm
flippers_No_NA <- na.omit(flippers)
mean(flippers_No_NA)
sd(flippers_No_NA)
sum(dnorm(flippers_No_NA, mean = 201, sd = 14, log = TRUE))
sum(dnorm(flippers_No_NA, mean = 100, sd = 14, log = TRUE))
sum(dnorm(flippers_No_NA, mean = 200, sd = 14, log = TRUE))
sum(dnorm(flippers_No_NA, mean = 202, sd = 14, log = TRUE))
sum(dnorm(flippers_No_NA, mean = 200.91, sd = 14.06, log = TRUE))
#load bird data
dat_bird <- read.csv(here::here("data", "bird.sta.csv"))
dat_habitat <- read.csv(here::here("data", "hab.sta.csv"))
dat_all <- merge(dat_bird, dat_habitat)
datWIWR <- dat_all$WIWR
#Q7:
#calculate sample probability of success (i.e., count != 0)
unique(datWIWR)
#Q7:
#calculate sample probability of success (i.e., count != 0)
num <- count(datWIWR != 0)
#Q7:
#calculate sample probability of success (i.e., count != 0)
sum(datWIWR != 0)
prob_success <- success / 1046
#Q7:
#calculate sample probability of success (i.e., count != 0)
success <- sum(datWIWR != 0)
prob_success <- success / 1046
sum(dbinom(datWIWR, size = 1045, prob = prob_success, log = TRUE))
require(palmerpenguins)
penguins <- penguins
dat_ade <- droplevels(subset(penguins, species == "Adelie"))
hist(dat_ade$body_mass_g, main = "Adelie Penguins: Body Mass", xlab = "body mass(g)")
boxplot(dat_ade$body_mass_g ~ dat_ade$sex)
boxplot(dat_ade$body_mass_g ~ dat_ade$sex, main = "Adelie Penguins: Body Mass by Sex", xlab = "Sex", ylab = "body mass(g)")
help(t.test)
#Q2:
mu <- mean(dat_ade$sex == "female", na.rm = TRUE)
#Q2:
if(dat_ade$sex == "female") {mean(dat_ade$body_mass_g, na.rm = TRUE}
#Q2:
if(dat_ade$sex == "female") {mean(dat_ade$body_mass_g, na.rm = TRUE)}
mu <- mean(dat_ade$body_mass_g ~ dat_ade$sex)
mu <- mean(dat_ade$body_mass_g ~ dat_ade$sex, na.rm = TRUE)
View(penguins)
help(select)
#Q2:
if(dat_ade$sex == "female") {
mu <- mean(dat_ade$body_mass_g, na.rm = TRUE)
}
#Q2:
if(dat_ade$sex == "female") {
mean(dat_ade$body_mass_g, na.rm = TRUE)
}
mu <- dat_ade %>% sex == "female" %>% mean(body_mass_g, na.rm = T)
library (magrittr)
mu <- dat_ade %>% sex == "female" %>% mean(body_mass_g, na.rm = T)
mu <- dat_ade$sex == "female" %>% mean(dat_ade$body_mass_g, na.rm = T)
mu <- dat_ade %>% dplyr::group_by(sex) %>%
dplyr::summarise(body_mass_g, na.rm = T)
mu <- dat_ade %>% dplyr::group_by(sex) %>%
dplyr::summarise(mu <- mean(body_mass_g, na.rm = T))
View(mu)
mu <- dat_ade %>% dplyr::group_by(sex) %>%
dplyr::summarise(avg <- mean(body_mass_g, na.rm = T))
mu
mu <- dat_ade %>% dplyr::group_by(sex) %>%
dplyr::summarise(avg = mean(body_mass_g, na.rm = T))
mu
fem_ade <- droplevels(subset(dat_ade, sex == "female"))
mu <- mean(fem_ade$body_mass_g, na.rm = T)
mu <- round(mean(fem_ade$body_mass_g, na.rm = T),2)
t.test(fem_ade, alternative = c(g), mu = mu, paired = false, var.equal = FALSE, conf.level = 0.95)
t.test(fem_ade, alternative = c("g"), mu = mu, paired = false, var.equal = FALSE, conf.level = 0.95)
t.test(fem_ade, alternative = c("g"), mu = mu, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(fem_ade, 0 alternative = c("g"), mu = mu, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(fem_ade, 0, alternative = c("g"), mu = mu, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(fem_ade$body_mass_g, 0, alternative = c("g"), mu = mu, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(fem_ade$body_mass_g, alternative = c("g"), mu = mu, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(fem_ade$body_mass_g, mu = mu, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
t.test(fem_ade$body_mass_g, mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
#Q4: 1 sample t-test that male Adelie penguins have body mass > 4000 g
male_ade <- droplevels(subset(dat_ade, sex == "male"))
t.test(male_ade$body_mass_g, alternative = c("g"), mu = 4000, paired = FALSE, var.equal = FALSE, conf.leve = 0.95)
#Q6: 2 sample t-test that male and female Adelie penguins have different body masses
t.test(fem_ade$body_mass_g, male_ade$body_mass_g, mu = 0, paired = TRUE, var.equal = FALSE, conf.level = 0.95)
#Q8: 2-sample (one tailed) t-test that male Adelie penguins are heavier than females
t.test(fem_ade$body_mass_g, male_ade$body_mass_g, alternative = c("g"), mu = 0, paired = TRUE, var.equal = FALSE, conf.level = 0.95)
#Q8: 2-sample (one tailed) t-test that male Adelie penguins are heavier than females
t.test( male_ade$body_mass_g, fem_ade$body_mass_g, alternative = c("g"), mu = 0, paired = TRUE, var.equal = FALSE, conf.level = 0.95)
data(iris)
force(iris)
fit_species <- lm(
Sepal.Length ~ Species,
data = iris)
summary(fit_species))
summary(fit_species)
unique(iris$Species)
plot(
Petal.Width ~ Petal.Length,
data = iris,
xlab = "Petal Length (cm)",
ylab = "Petal Width (cm)"
)
fit_petals
fit_petals <- lm(
Petal.Width ~ Petal.Length,
data = iris)
summary(fit_petals)
summary(fit_species)
5.0060+1.5820
boxplot(
Sepal.Length~Species,
data = iris)
residuals(fit_species)
hist(residuals(fit_species))
shapiro.test(fit_species)
help(shapiro.test)
shapiro.test(residuals(fit_species))
hist(residuals(fit_species))
fit_petals <- lm(
Petal.Width ~ Petal.Length,
data = iris)
summary(fit_petals)
0.415755*4+(-0.363076)
hist(residuals(fit_petals))
shapiro.test(residuals(fit_petals))
g1 <- read.csv("ginkgo_data_2022.csv", header = T)
getwd
getwd()
g1 <- read.csv("~/data/ginkgo_data_2022.csv", header = T)
g1 <- read.csv("~\data\ginkgo_data_2022.csv", header = T)
g1 <- read.csv(here("data", "ginkgo_data_2022.csv", header = T)
g1 <- read.csv(here("data", "ginkgo_data_2022.csv", header = T)
g1 <- read.csv(here("data", "ginkgo_data_2022.csv"))
load(here)
g1 <- read.csv(here("data", "ginkgo_data_2022.csv"))
library(here)
g1 <- read.csv(here("data", "ginkgo_data_2022.csv"))
head(g1)
unique(g1$Site_id)
#Q1: How many trees total in the dataset
unique(g1$site_id)
count(unique(g1$site_id))
length(unique(g1$site_id))
seed_trees <- droplevels(subset(g1, seeds == "TRUE"))
seed_trees <- droplevels(subset(g1, seeds_present == "TRUE"))
head(seed_trees)
length(unique(seed_trees$site_id))
boxplot(g1$max_width ~ g1$seed_present)
boxplot(g1$max_width)
boxplot(max_width ~ seed_present, data = g1)
boxplot(max_width ~ seeds_present, data = g1)
hab.sta <- read.csv(here( "data", "hab.sta.csv"))
library(here)
hab.sta <- read.csv(here( "data", "hab.sta.csv"))
getwd()
g1 <- read.csv(here("data", "ginkgo_data_2022.csv"))
head(g1)
#Q1: How many trees total in the dataset
length(unique(g1$site_id)) #22
#Q2:How many trees had seeds?
seed_trees <- droplevels(subset(g1, seeds_present == "TRUE"))
head(seed_trees)
length(unique(seed_trees$site_id)) #4
#Q3: conditional boxplot of a continuous variable conditioned
# on seeds_present
boxplot(max_width ~ seeds_present, data = g1)
plot(g1$max_depth, g1$max_width)
plot(g1$max_depth, g1$max_width, xlab = "Maximum leaf depth (mm)",
ylab = "Maximum leaf width(mm)", main = "Maximum Leaf Width by Depth")
